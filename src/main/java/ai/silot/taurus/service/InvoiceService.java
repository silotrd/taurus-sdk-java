/*
 * Copyright 2021 silot.ai
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package ai.silot.taurus.service;

import ai.silot.taurus.config.Taurus;
import ai.silot.taurus.model.TaurusBaseVo;
import ai.silot.taurus.model.TaurusListVo;
import ai.silot.taurus.model.invoice.InvoiceVo;
import ai.silot.taurus.util.TaurusHttpUtil;
import com.google.gson.Gson;
import com.google.gson.reflect.TypeToken;

import java.io.IOException;
import java.lang.reflect.Type;
import java.math.BigDecimal;
import java.util.HashMap;
import java.util.Map;

public class InvoiceService {
    /**
     * Create Invoice
     *
     * @param externalId         ID of your choice (typically the unique identifier of an invoice in your system)
     * @param amount             Amount on the invoice. The minimum amount to create an invoice is 1 IDR
     * @param description        Description of the invoice
     * @param invoiceDuration    Duration of time that the end customer is given to pay the invoice before expiration (in seconds, since creation). Default is 24 hours (86,400 seconds).
     * @param successRedirectUrl URL that the end customer will be redirected to upon successful invoice payment.
     * @return Current invoice vo
     * @throws IOException May be caused by an HTTP request
     */
    public static TaurusBaseVo<InvoiceVo> create(String externalId,
                                                 BigDecimal amount,
                                                 String description,
                                                 Integer invoiceDuration,
                                                 String successRedirectUrl) throws IOException {
        String url = String.format("%s%s",
                Taurus.serverUrl,
                "/api/v1/invoice");
        Type type = new TypeToken<TaurusBaseVo<InvoiceVo>>() {
        }.getType();
        Map<String, Object> paramMap = new HashMap<>();
        paramMap.put("externalId", externalId);
        paramMap.put("amount", amount);
        paramMap.put("description", description);
        paramMap.put("invoiceDuration", invoiceDuration);
        paramMap.put("successRedirectUrl", successRedirectUrl);
        return TaurusHttpUtil.post(url, type, new Gson().toJson(paramMap));
    }

    /**
     * Get invoice detail
     *
     * @param invoiceId An invoice ID generated by Taurus
     * @return invoice vo
     * @throws IOException May be caused by an HTTP request
     */
    public static TaurusBaseVo<InvoiceVo> getById(Long invoiceId) throws IOException {
        String url = String.format("%s%s?invoiceId=%s",
                Taurus.serverUrl,
                "/api/v1/invoice",
                invoiceId);
        Type type = new TypeToken<TaurusBaseVo<InvoiceVo>>() {
        }.getType();
        return TaurusHttpUtil.get(url, type);
    }

    /**
     * List All Invoices
     * You can list all invoices, or list the invoices for a specific updated time.
     * The invoices are returned sorted by created date, with the most recently created invoices appearing first.
     *
     * @param limit         (optional) default 10
     * @param lastInvoiceId (optional) A cursor for use in pagination.
     * @param status        (optional) Invoice status. Enum: "UNPAID" "PAID" "EXPIRED" "SETTLED"
     * @return invoice vo list
     * @throws IOException May be caused by an HTTP request
     */
    public static TaurusBaseVo<TaurusListVo<InvoiceVo>> list(Integer limit,
                                                             Long lastInvoiceId,
                                                             String status) throws IOException {
        String url = String.format("%s%s?limit=%s&lastInvoiceId=%s&status=%s",
                Taurus.serverUrl,
                "/api/v1/invoice/list",
                limit == null ? "" : limit,
                lastInvoiceId == null ? "" : lastInvoiceId,
                status == null ? "" : status);
        Type type = new TypeToken<TaurusBaseVo<TaurusListVo<InvoiceVo>>>() {
        }.getType();
        return TaurusHttpUtil.get(url, type);
    }

    /**
     * You can cancel an already created invoice by expiring it immediately using this endpoint.
     *
     * @param invoiceId An invoice ID generated by Taurus
     * @return Common response
     * @throws IOException May be caused by an HTTP request
     */
    public static TaurusBaseVo<Object> expire(Long invoiceId) throws IOException {
        String url = String.format("%s%s",
                Taurus.serverUrl,
                "/api/v1/invoice/expire");
        Type type = new TypeToken<TaurusBaseVo<Object>>() {
        }.getType();
        Map<String, Object> paramMap = new HashMap<>();
        paramMap.put("invoiceId", invoiceId);
        return TaurusHttpUtil.post(url, type, new Gson().toJson(paramMap));
    }

}
